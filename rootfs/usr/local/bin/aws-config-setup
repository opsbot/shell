#!/usr/bin/env bash

export AWS_DATA_PATH=${AWS_DATA_PATH:-/localhost/.aws}
export AWS_CONFIG_FILE=${AWS_DATA_PATH}/config
export AWS_REGION="${AWS_REGION:-us-east-1}"


die() {
  local message="${1}"
	echo "$message" >&2
	exit 1
}

[ -z "${AWS_ACCOUNT_ID}" ] || die "AWS_ACCOUNT_ID not defined"
[ -z "${AWS_CONFIG_FILE}" ] || die "AWS_CONFIG_FILE not defined"
[ -z "${AWS_DEFAULT_PROFILE}" ] || die "AWS_DEFAULT_PROFILE not defined"
[ -z "${AWS_ROOT_ACCOUNT_ID}" ] || die "AWS_ROOT_ACCOUNT_ID not defined"
[ -d "/localhost/.awsvault/" ] || die "/localhost/.awsvault/ directory not found"
[ -w "/localhost/.awsvault/" ] || die "/localhost/.awsvault/ is not writable"
[ -d "/localhost/.awsvault/keys/" ] || die "/localhost/.awsvault/keys/ directory not found"
[ -w "/localhost/.awsvault/keys/" ] || die "/localhost/.awsvault/keys/ is not writable"

# Derive the source profile from the prefix of the default profile
export AWS_SOURCE_PROFILE=$(echo ${AWS_DEFAULT_PROFILE} | cut -d- -f1)

[ "${AWS_SOURCE_PROFILE}" = "${AWS_DEFAULT_PROFILE}" ] || die "AWS_DEFAULT_PROFILE should look like namespace-stage-role (e.g. eg-testing-admin)"

# Define empty source profile
crudini --set --inplace ${AWS_CONFIG_FILE} "profile ${AWS_SOURCE_PROFILE}"

# Define default profile
crudini --set --inplace "${AWS_CONFIG_FILE}" "profile ${AWS_DEFAULT_PROFILE}" region "${AWS_REGION}"

if [ "${AWS_ACCOUNT_ID}" == "${AWS_ROOT_ACCOUNT_ID}" ]; then
	crudini --set --inplace "${AWS_CONFIG_FILE}" "profile ${AWS_DEFAULT_PROFILE}" role_arn "arn:aws:iam::${AWS_ACCOUNT_ID}:role/${AWS_DEFAULT_PROFILE}"
else
	crudini --set --inplace "${AWS_CONFIG_FILE}" "profile ${AWS_DEFAULT_PROFILE}" role_arn "arn:aws:iam::${AWS_ACCOUNT_ID}:role/OrganizationAccountAccessRole"
fi

# Prompt the user to setup MFA
read -p "Use MFA? [y/n] " SETUP_MFA

if [ "${SETUP_MFA}" == "y" ]; then
	read -p "AWS IAM Username: " AWS_USERNAME
	export AWS_MFA_SERIAL="arn:aws:iam::${AWS_ROOT_ACCOUNT_ID}:mfa/${AWS_USERNAME}"
	crudini --set --inplace "${AWS_CONFIG_FILE}" "profile ${AWS_DEFAULT_PROFILE}" mfa_serial "${AWS_MFA_SERIAL}"
else
	crudini --del "${AWS_CONFIG_FILE}" "profile ${AWS_DEFAULT_PROFILE}" mfa_serial
fi

# Reference the source profile settings
crudini --set --inplace "${AWS_CONFIG_FILE}" "profile ${AWS_DEFAULT_PROFILE}" source_profile "${AWS_SOURCE_PROFILE}"

# Prompt the user to setup their AWS credentials in aws-vault
read -p "Setup AWS Credentials (aws-vault)? [y/n] " SETUP_VAULT

if [ "${SETUP_VAULT}" == "y" ]; then
	aws-vault add "${AWS_SOURCE_PROFILE}"
fi

echo "Configured AWS ${AWS_DEFAULT_PROFILE} profile for ${AWS_REGION} region in the ${AWS_ACCOUNT_ID} account"
